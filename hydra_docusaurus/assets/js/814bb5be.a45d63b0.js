"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8628],{5024:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"hydra-js-client/fanout","title":"fanout","description":"fanout is an asynchronous function that initiates the fanout process for a closed Hydra head. This action distributes the final UTxOs from the Hydra head back to the main Cardano chain.","source":"@site/docs/hydra-js-client/fanout.md","sourceDirName":"hydra-js-client","slug":"/hydra-js-client/fanout","permalink":"/kuber/hydra_docusaurus/docs/hydra-js-client/fanout","draft":false,"unlisted":false,"editUrl":"https://github.com/dQuadrant/kuber/tree/feat/hydra/docs/hydra-js-client/fanout.md","tags":[],"version":"current","frontMatter":{},"sidebar":"hydraJsClient","previous":{"title":"close","permalink":"/kuber/hydra_docusaurus/docs/hydra-js-client/close"},"next":{"title":"abort","permalink":"/kuber/hydra_docusaurus/docs/hydra-js-client/abort"}}');var a=t(4848),o=t(8453);const s={},i="fanout",c={},d=[{value:"Function Signature",id:"function-signature",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Example",id:"example",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"fanout",children:"fanout"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"fanout"})," is an asynchronous function that initiates the fanout process for a closed Hydra head. This action distributes the final UTxOs from the Hydra head back to the main Cardano chain."]}),"\n",(0,a.jsx)(n.h2,{id:"function-signature",children:"Function Signature"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"async fanout(wait: boolean = false): Promise<any>\n"})}),"\n",(0,a.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"wait"}),": An optional ",(0,a.jsx)(n.code,{children:"boolean"})," indicating whether to wait for the fanout to complete. Defaults to ",(0,a.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,a.jsxs)(n.p,{children:["A ",(0,a.jsx)(n.code,{children:"Promise"})," that resolves to an object containing information about the fanout process."]}),"\n",(0,a.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'const { loadCrypto } = require("libcardano");\nconst { KuberHydraApiProvider } = require("kuber-client");\n\nasync function main() {\n  await loadCrypto();\n\n  const hydra = new KuberHydraApiProvider("http://localhost:8081"); // Replace with your Hydra API URL\n\n  try {\n    console.log("Initiating fanout...");\n    const result = await hydra.fanout(true); // Wait for fanout to complete\n    console.log("Fanout completed:", result);\n  } catch (error) {\n    console.error("Error during fanout:", error);\n  }\n}\n\nmain();\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var r=t(6540);const a={},o=r.createContext(a);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);