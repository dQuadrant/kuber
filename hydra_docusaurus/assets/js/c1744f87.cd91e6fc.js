"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4699],{3161:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"hydra-js-client/commit","title":"commit","description":"commit is an asynchronous function that commits UTxOs to an initializing Hydra head. This action moves funds from the main chain into the Hydra head, making them available for off-chain transactions.","source":"@site/docs/hydra-js-client/commit.md","sourceDirName":"hydra-js-client","slug":"/hydra-js-client/commit","permalink":"/kuber/hydra_docusaurus/docs/hydra-js-client/commit","draft":false,"unlisted":false,"editUrl":"https://github.com/dQuadrant/kuber/tree/feat/hydra/docs/hydra-js-client/commit.md","tags":[],"version":"current","frontMatter":{},"sidebar":"hydraJsClient","previous":{"title":"contest","permalink":"/kuber/hydra_docusaurus/docs/hydra-js-client/contest"},"next":{"title":"decommit","permalink":"/kuber/hydra_docusaurus/docs/hydra-js-client/decommit"}}');var o=t(4848),r=t(8453);const s={},a="commit",c={},l=[{value:"Function Signature",id:"function-signature",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Example",id:"example",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"commit",children:"commit"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.code,{children:"commit"})," is an asynchronous function that commits UTxOs to an initializing Hydra head. This action moves funds from the main chain into the Hydra head, making them available for off-chain transactions."]}),"\n",(0,o.jsx)(n.h2,{id:"function-signature",children:"Function Signature"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-typescript",children:"async commit(utxos: Commit, submit: boolean = false): Promise<CommonTxObject>\n"})}),"\n",(0,o.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"utxos"}),": A ",(0,o.jsx)(n.code,{children:"Commit"})," object specifying the UTxOs to be committed."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"submit"}),": An optional ",(0,o.jsx)(n.code,{children:"boolean"})," indicating whether to submit the transaction to the chain. Defaults to ",(0,o.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,o.jsxs)(n.p,{children:["A ",(0,o.jsx)(n.code,{children:"Promise"})," that resolves to a ",(0,o.jsx)(n.code,{children:"CommonTxObject"})," representing the commitment transaction."]}),"\n",(0,o.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-javascript",children:'const { loadCrypto } = require("libcardano");\nconst { KuberHydraApiProvider } = require("kuber-client");\n\nasync function main() {\n  await loadCrypto();\n\n  const hydra = new KuberHydraApiProvider("http://localhost:8081"); // Replace with your Hydra API URL\n\n  const utxosToCommit = {\n    utxos: [\n      {\n        txIn: "yourTxHash#0", // Replace with a valid UTxO\n        value: {\n          lovelace: "1000000", // 1 ADA\n        },\n      },\n    ],\n  };\n\n  try {\n    console.log("Committing UTxOs...");\n    const result = await hydra.commit(utxosToCommit, true); // Submit the transaction\n    console.log("Commit transaction:", result);\n  } catch (error) {\n    console.error("Error committing UTxOs:", error);\n  }\n}\n\nmain();\n'})})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(6540);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);