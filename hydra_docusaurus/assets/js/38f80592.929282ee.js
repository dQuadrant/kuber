"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7072],{5881:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"kuber-api-reference","title":"Kuber API Reference","description":"This section provides detailed documentation for the Kuber backend API endpoints.","source":"@site/docs/kuber-api-reference.md","sourceDirName":".","slug":"/kuber-api-reference","permalink":"/kuber/hydra_docusaurus/docs/kuber-api-reference","draft":false,"unlisted":false,"editUrl":"https://github.com/dQuadrant/kuber/tree/feat/hydra/docs/kuber-api-reference.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2,"title":"Kuber API Reference"},"sidebar":"hydraJsClient","previous":{"title":"\u2699\ufe0f\ud83d\udc32 Kuber-Hydra API Reference","permalink":"/kuber/hydra_docusaurus/docs/kuber-hydra-api-reference"}}');var n=r(4848),i=r(8453),o=r(5532);const a={sidebar_position:2,title:"Kuber API Reference"},d="Kuber API Reference",c={},p=[{value:"Query API",id:"query-api",level:2},{value:"Kuber API",id:"kuber-api",level:2},{value:"Utility API",id:"utility-api",level:2},{value:"Health",id:"health",level:2}];function l(e){const t={h1:"h1",h2:"h2",header:"header",p:"p",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"kuber-api-reference",children:"Kuber API Reference"})}),"\n",(0,n.jsx)(t.p,{children:"This section provides detailed documentation for the Kuber backend API endpoints."}),"\n",(0,n.jsx)(t.h2,{id:"query-api",children:"Query API"}),"\n",(0,n.jsx)(o.A,{method:"GET",path:"/api/v3/protocol-params",title:"Retrieve Protocol Parameters",description:"Retrieves the current protocol parameters for the Cardano network.",responses:[{code:"200 OK",description:"Returns the protocol parameters."}]}),"\n",(0,n.jsx)(o.A,{method:"GET",path:"/api/v3/chain-point",title:"Retrieve Chain Point",description:"Retrieves the current chain point (block number and hash) of the Cardano network.",responses:[{code:"200 OK",description:"Returns the current chain point."}]}),"\n",(0,n.jsx)(o.A,{method:"GET",path:"/api/v3/utxo",title:"Query UTxOs",description:"Queries UTxOs based on provided addresses and/or transaction inputs.",queryParams:[{name:"address",type:"Array of T.Text",description:"Filter UTxOs by address.",optional:!0},{name:"txin",type:"Array of T.Text",description:"Filter UTxOs by transaction input.",optional:!0}],responses:[{code:"200 OK",description:"Returns a list of UTxOs."}]}),"\n",(0,n.jsx)(o.A,{method:"GET",path:"/api/v3/system-start",title:"Retrieve System Start",description:"Retrieves the system start time of the Cardano network.",responses:[{code:"200 OK",description:"Returns the system start time."}]}),"\n",(0,n.jsx)(o.A,{method:"GET",path:"/api/v3/current-era",title:"Retrieve Current Era",description:"Retrieves the current era of the Cardano network.",responses:[{code:"200 OK",description:"Returns the current Cardano era."}]}),"\n",(0,n.jsx)(o.A,{method:"GET",path:"/api/v3/genesis-params",title:"Retrieve Genesis Parameters",description:"Retrieves the genesis parameters of the Cardano network.",responses:[{code:"200 OK",description:"Returns the genesis parameters."}]}),"\n",(0,n.jsx)(t.h2,{id:"kuber-api",children:"Kuber API"}),"\n",(0,n.jsx)(o.A,{method:"POST",path:"/api/v1/tx",title:"Build Transaction",description:"Builds a transaction based on the provided TxBuilder.",queryParams:[{name:"submit",type:"Boolean",description:"If true, the transaction will be submitted to the chain.",optional:!0}],requestBody:{type:"TxBuilder",description:"Details for building the transaction.",fields:[{name:"inputs",type:"Array",description:"List of transaction inputs."},{name:"outputs",type:"Array",description:"List of transaction outputs."},{name:"metadata",type:"Object",description:"Transaction metadata."}]},responses:[{code:"200 OK",description:"Returns TxModal (transaction details)."}]}),"\n",(0,n.jsx)(o.A,{method:"POST",path:"/api/v1/tx/submit",title:"Submit Transaction",description:"Submits a transaction to the Cardano network.",requestBody:{type:"SubmitTxModal",description:"Signed transaction details.",fields:[{name:"signedTx",type:"string",description:"The signed transaction."},{name:"witnesses",type:"Array",description:"Transaction witnesses."}]},responses:[{code:"200 OK",description:"Success message."}]}),"\n",(0,n.jsx)(o.A,{method:"GET",path:"/api/v1/time",title:"Retrieve Current Time",description:"Retrieves the current time from the Cardano network.",responses:[{code:"200 OK",description:"Returns the current time."}]}),"\n",(0,n.jsx)(o.A,{method:"POST",path:"/api/v1/time/toslot",title:"Translate POSIX Time to Slot",description:"Translates a given POSIX time to a Cardano slot number.",requestBody:{type:"TimeTranslationReq",description:"Request body for POSIX time to slot translation.",fields:[{name:"posixTime",type:"Integer",description:"The POSIX time to translate."}]},responses:[{code:"200 OK",description:"Returns the corresponding slot number."}]}),"\n",(0,n.jsx)(o.A,{method:"POST",path:"/api/v1/time/fromSlot",title:"Translate Slot to POSIX Time",description:"Translates a given Cardano slot number to POSIX time.",requestBody:{type:"SlotTranslationReq",description:"Request body for slot to POSIX time translation.",fields:[{name:"slot",type:"Integer",description:"The slot number to translate."}]},responses:[{code:"200 OK",description:"Returns the corresponding POSIX time."}]}),"\n",(0,n.jsx)(t.h2,{id:"utility-api",children:"Utility API"}),"\n",(0,n.jsx)(o.A,{method:"POST",path:"/api/v1/tx/fee",title:"Calculate Minimum Fee",description:"Calculates the minimum fee required for a given transaction.",requestBody:{type:"TxModal",description:"The transaction for which to calculate the fee.",fields:[]},responses:[{code:"200 OK",description:"Returns the minimum fee (Coin)."}]}),"\n",(0,n.jsx)(o.A,{method:"POST",path:"/api/v1/tx/exUnits",title:"Calculate Execution Units",description:"Calculates the execution units (ExUnits) for a given transaction.",requestBody:{type:"TxModal",description:"The transaction for which to calculate execution units.",fields:[]},responses:[{code:"200 OK",description:"Returns the execution units (ExUnitsResponseModal)."}]}),"\n",(0,n.jsx)(t.h2,{id:"health",children:"Health"}),"\n",(0,n.jsx)(o.A,{method:"GET",path:"/api/v3/health",title:"Cardano Health Check",description:"Performs a health check to verify the connection and sync-status of the Cardano node.",responses:[{code:"200 OK",description:"Cardano node is healthy."},{code:"500 Internal Server Error",description:"Cardano node is not available or an error occurred."}]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},5532:(e,t,r)=>{r.d(t,{A:()=>y});var s=r(6540);const n="apiEndpoint_XiEM",i="header_PkQN",o="method_LC0H",a="methodGet_xpm2",d="methodPost_XtHI",c="methodPut_GvoU",p="methodDelete_AGUR",l="path_OaCN",h="title_KRFL",u="arrow_AOYQ",m="arrowOpen_P5cz",x="content_IV7j";var f=r(4848);const y=e=>{let{method:t,path:r,title:y,description:v,queryParams:b,requestBody:T,responses:j}=e;const[P,R]=(0,s.useState)(!1);return(0,f.jsxs)("div",{className:n,children:[(0,f.jsxs)("div",{className:i,onClick:()=>{R(!P)},children:[(0,f.jsx)("span",{className:`${o} ${(e=>{switch(e.toLowerCase()){case"get":return a;case"post":return d;case"put":return c;case"delete":return p;default:return""}})(t)}`,children:t}),(0,f.jsx)("span",{className:l,children:r}),(0,f.jsx)("span",{className:h,children:y}),(0,f.jsx)("span",{className:`${u} ${P?m:""}`,children:"\u25bc"})]}),P&&(0,f.jsxs)("div",{className:x,children:[(0,f.jsx)("p",{children:v}),b&&b.length>0&&(0,f.jsxs)(f.Fragment,{children:[(0,f.jsx)("h4",{children:"Query Parameters:"}),(0,f.jsx)("ul",{children:b.map(((e,t)=>(0,f.jsxs)("li",{children:[(0,f.jsx)("code",{children:e.name})," (",e.type,") ",e.optional?"(optional)":"",": ",e.description]},t)))})]}),T&&(0,f.jsxs)(f.Fragment,{children:[(0,f.jsxs)("h4",{children:["Request Body (",T.type,"):"]}),(0,f.jsx)("p",{children:T.description}),(0,f.jsx)("ul",{children:T.fields.map(((e,t)=>(0,f.jsxs)("li",{children:[(0,f.jsx)("code",{children:e.name})," (",e.type,"): ",e.description]},t)))})]}),j&&j.length>0&&(0,f.jsxs)(f.Fragment,{children:[(0,f.jsx)("h4",{children:"Responses:"}),(0,f.jsx)("ul",{children:j.map(((e,t)=>(0,f.jsxs)("li",{children:[(0,f.jsx)("code",{children:e.code}),": ",e.description]},t)))})]})]})]})}},8453:(e,t,r)=>{r.d(t,{R:()=>o,x:()=>a});var s=r(6540);const n={},i=s.createContext(n);function o(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),s.createElement(i.Provider,{value:t},e.children)}}}]);