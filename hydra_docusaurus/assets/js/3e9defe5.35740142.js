"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3287],{8460:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"hydra-js-client/getting-started","title":"Setting Up","description":"This guide walks through the steps to set up and run a Hydra Head using the kuber-hydra relay server. We\u2019ll demonstrate the process using two Hydra nodes\u2014Alice and Bob\u2014on the Cardano testnet.","source":"@site/docs/hydra-js-client/getting-started.md","sourceDirName":"hydra-js-client","slug":"/hydra-js-client/getting-started","permalink":"/kuber/hydra_docusaurus/docs/hydra-js-client/getting-started","draft":false,"unlisted":false,"editUrl":"https://github.com/dQuadrant/kuber/tree/feat/hydra/docs/hydra-js-client/getting-started.md","tags":[],"version":"current","frontMatter":{},"sidebar":"hydraJsClient","next":{"title":"\ud83d\udce6 Start Developing","permalink":"/kuber/hydra_docusaurus/docs/hydra-js-client/installation"}}');var t=n(4848),i=n(8453);const d={},o="Setting Up",l={},a=[{value:"<strong>1. Hydra Node Setup</strong>",id:"1-hydra-node-setup",level:2},{value:"<strong>2. Kuber-Hydra Relay Server</strong>",id:"2-kuber-hydra-relay-server",level:2},{value:"<strong>Repository</strong>",id:"repository",level:3},{value:"<strong>Configuration</strong>",id:"configuration",level:3},{value:"<strong>With cabal</strong>",id:"with-cabal",level:4},{value:"<strong>With Docker</strong>",id:"with-docker",level:4},{value:"<strong>3. Kuber Client</strong>",id:"3-kuber-client",level:2},{value:"Hydra Service Initialization",id:"hydra-service-initialization",level:3}];function c(e){const r={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"setting-up",children:"Setting Up"})}),"\n",(0,t.jsxs)(r.p,{children:["This guide walks through the steps to set up and run a Hydra Head using the ",(0,t.jsx)(r.code,{children:"kuber-hydra"})," relay server. We\u2019ll demonstrate the process using two Hydra nodes\u2014",(0,t.jsx)(r.strong,{children:"Alice"})," and ",(0,t.jsx)(r.strong,{children:"Bob"}),"\u2014on the Cardano testnet."]}),"\n",(0,t.jsx)(r.h2,{id:"1-hydra-node-setup",children:(0,t.jsx)(r.strong,{children:"1. Hydra Node Setup"})}),"\n",(0,t.jsxs)(r.p,{children:["To set up a Hydra Head on the testnet, follow the official Hydra protocol tutorial:\n\ud83d\udc49 ",(0,t.jsx)(r.a,{href:"https://hydra.family/head-protocol/docs/tutorial",children:"Hydra Head Protocol Documentation"})]}),"\n",(0,t.jsx)(r.p,{children:"In our example setup:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Alice's Hydra Node"})," runs on ",(0,t.jsx)(r.code,{children:"172.16.238.10:4001"})]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Bob's Hydra Node"})," runs on ",(0,t.jsx)(r.code,{children:"172.16.238.20:4002"})]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"2-kuber-hydra-relay-server",children:(0,t.jsx)(r.strong,{children:"2. Kuber-Hydra Relay Server"})}),"\n",(0,t.jsx)(r.h3,{id:"repository",children:(0,t.jsx)(r.strong,{children:"Repository"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["GitHub: ",(0,t.jsx)(r.a,{href:"https://github.com/dquadrant/kuber",children:"kuber"})]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"configuration",children:(0,t.jsx)(r.strong,{children:"Configuration"})}),"\n",(0,t.jsxs)(r.p,{children:["You can run ",(0,t.jsx)(r.code,{children:"kuber-hydra"})," either directly or using Docker."]}),"\n",(0,t.jsx)(r.h4,{id:"with-cabal",children:(0,t.jsx)(r.strong,{children:"With cabal"})}),"\n",(0,t.jsxs)(r.p,{children:["To run ",(0,t.jsx)(r.code,{children:"kuber-hydra"})," with cabal, you need to set the required environment variables and then run the application."]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"export CARDANO_NODE_SOCKET_PATH=/path/to/cardano-node/preview/node.socket\nexport NETWORK=preview\ncd kuber-hydra\ncabal run kuber-hydra -- --hydra-url ws://172.16.238.10:4001 --port 8081\n"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"CARDANO_NODE_SOCKET_PATH"}),": The path to your Cardano node socket."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"NETWORK"}),": The Cardano network ID (e.g., ",(0,t.jsx)(r.code,{children:"mainnet"}),", ",(0,t.jsx)(r.code,{children:"preview"}),", ",(0,t.jsx)(r.code,{children:"preprod"}),", or a ",(0,t.jsx)(r.code,{children:"network_magic"})," number). This is a ",(0,t.jsx)(r.strong,{children:"required"})," environment variable."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"--hydra-url"}),": The WebSocket URL of your Hydra node. This is a ",(0,t.jsx)(r.strong,{children:"required"})," command-line argument."]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"--port"}),": The port for the Kuber-Hydra relay server. If not specified, it defaults to ",(0,t.jsx)(r.code,{children:"8081"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(r.blockquote,{children:["\n",(0,t.jsxs)(r.p,{children:["The Kuber-Hydra relay API will be accessible at ",(0,t.jsx)(r.code,{children:"http://localhost:8081"}),"."]}),"\n"]}),"\n",(0,t.jsx)(r.h4,{id:"with-docker",children:(0,t.jsx)(r.strong,{children:"With Docker"})}),"\n",(0,t.jsxs)(r.p,{children:["For a quick setup, you can use the provided ",(0,t.jsx)(r.code,{children:"docker-compose.yml"})," to run ",(0,t.jsx)(r.code,{children:"kuber-hydra"})," along with a Cardano node and Hydra node."]}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:(0,t.jsxs)(r.strong,{children:["Navigate to the ",(0,t.jsx)(r.code,{children:"kuber-hydra"})," directory:"]})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"cd kuber-hydra\n"})}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Start the services:"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"docker-compose up -d\n"})}),"\n",(0,t.jsxs)(r.p,{children:["This will start ",(0,t.jsx)(r.code,{children:"cardano-node"}),", ",(0,t.jsx)(r.code,{children:"hydra-node"}),", and ",(0,t.jsx)(r.code,{children:"kuber-hydra"})," in detached mode."]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Verify services are running:"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:"docker-compose ps\n"})}),"\n",(0,t.jsx)(r.p,{children:"Ensure all services are up and healthy."}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.strong,{children:"Access the Kuber-Hydra Relay API:"}),"\nThe API will be accessible at ",(0,t.jsx)(r.code,{children:"http://localhost:8081"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"3-kuber-client",children:(0,t.jsx)(r.strong,{children:"3. Kuber Client"})}),"\n",(0,t.jsxs)(r.p,{children:["Example repository: ",(0,t.jsx)(r.a,{href:"https://github.com/sireto/kuber-client-js/tree/master/hydra-example",children:"kuber-client-example"})]}),"\n",(0,t.jsxs)(r.p,{children:["Test file: ",(0,t.jsx)(r.a,{href:"https://github.com/sireto/kuber-client-js/blob/master/__tests__/hydra.test.ts",children:"hydra.test.ts"})]}),"\n",(0,t.jsx)(r.h3,{id:"hydra-service-initialization",children:"Hydra Service Initialization"}),"\n",(0,t.jsx)(r.p,{children:"Assuming that the hydra node is running and kuber-hdra server is started on localhost:8081, we can pass the host url to this class constructor to create the service:"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-ts",children:'import { KuberHydraService } from "kuber-client";\n\nconst hydraService = new KuberHydraService("http://localhost:8081");\n'})})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>d,x:()=>o});var s=n(6540);const t={},i=s.createContext(t);function d(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(i.Provider,{value:r},e.children)}}}]);