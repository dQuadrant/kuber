"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8700],{5948:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"hydra-js-client/initialize","title":"initialize","description":"initialize is an asynchronous function that initiates a Hydra head. This is the first step to open a new Hydra head for off-chain transactions.","source":"@site/docs/hydra-js-client/initialize.md","sourceDirName":"hydra-js-client","slug":"/hydra-js-client/initialize","permalink":"/kuber/hydra_docusaurus/docs/hydra-js-client/initialize","draft":false,"unlisted":false,"editUrl":"https://github.com/dQuadrant/kuber/tree/feat/hydra/docs/hydra-js-client/initialize.md","tags":[],"version":"current","frontMatter":{},"sidebar":"hydraJsClient","previous":{"title":"queryHeadState","permalink":"/kuber/hydra_docusaurus/docs/hydra-js-client/queryHeadState"},"next":{"title":"close","permalink":"/kuber/hydra_docusaurus/docs/hydra-js-client/close"}}');var a=i(4848),r=i(8453);const s={},o="initialize",l={},c=[{value:"Function Signature",id:"function-signature",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"Example",id:"example",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsx)(n.h1,{id:"initialize",children:"initialize"})}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.code,{children:"initialize"})," is an asynchronous function that initiates a Hydra head. This is the first step to open a new Hydra head for off-chain transactions."]}),"\n",(0,a.jsx)(n.h2,{id:"function-signature",children:"Function Signature"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"async initialize(wait: boolean = false): Promise<any>\n"})}),"\n",(0,a.jsx)(n.h2,{id:"parameters",children:"Parameters"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsxs)(n.li,{children:[(0,a.jsx)(n.code,{children:"wait"}),": An optional ",(0,a.jsx)(n.code,{children:"boolean"})," indicating whether to wait for the head to be initialized. Defaults to ",(0,a.jsx)(n.code,{children:"false"}),"."]}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"returns",children:"Returns"}),"\n",(0,a.jsxs)(n.p,{children:["A ",(0,a.jsx)(n.code,{children:"Promise"})," that resolves to an object containing information about the initialization process."]}),"\n",(0,a.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-javascript",children:'const { loadCrypto } = require("libcardano");\nconst { KuberHydraApiProvider } = require("kuber-client");\n\nasync function main() {\n  await loadCrypto();\n\n  const hydra = new KuberHydraApiProvider("http://localhost:8081"); // Replace with your Hydra API URL\n\n  try {\n    console.log("Initializing Hydra head...");\n    const result = await hydra.initialize(true); // Wait for initialization to complete\n    console.log("Hydra head initialized:", result);\n  } catch (error) {\n    console.error("Error initializing Hydra head:", error);\n  }\n}\n\nmain();\n'})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>o});var t=i(6540);const a={},r=t.createContext(a);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);